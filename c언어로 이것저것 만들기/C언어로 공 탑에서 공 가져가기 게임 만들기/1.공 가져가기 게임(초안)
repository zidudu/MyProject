#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

/*
공 탑 가져가기 게임 설명
1. 5개의 레벨이 존재하고 제일 1번째 레벨부터 1개, 그 다음부터 2개,3개,4개,5개의 공이 존재하게 된다.
	0       -1
       0 0	-2
      0 0 0	-3
     0 0 0 0	-4
    0 0 0 0 0	-5
2.플레이어 1과 2가 있고, 한 턴씩 번갈아가며 공을 가져가게 된다.
3.먼저 레벨을 선택한 다음, 그 레벨의 열에서 공을 갯수 제한 없이 가져갈 수 있다.
[단, 이미 공과 공 사이에 가져간 공이 있다면, 그 사이를 제외한 양쪽 범위에서만 가져갈 수 있게 된다.]
4.공을 가져가면서 마지막에 공을 가지게 되는 사람이 이기게 된다.

이 게임을 구현해보자

*예제 
1.입력: 
플레이어1 입력해주세요[레벨선택(3),공의 위치와 공의 개수(1,3)  // 첫번째부터 3개 가져감. => 레벨: 4, 공 위치: 3, 공 개수: 2 는 4번째 줄에서 3번째 열부터 2개를 가져감.
출력 : 플레이어1이 레벨 3에서 공위치 1번째부터 3개를 가져간 경우
	0       -1
       0 0	-2
      X X X	-3
     0 0 0 0	-4
    0 0 0 0 0	-5

플레이어2가 레벨 4에서 공위치 3번째부터 2개를 가져간 경우
	0       -1
       0 0	-2
      X X X	-3
     0 0 @ @	-4
    0 0 0 0 0	-5
*/


//구조체 생성
/*struct Ball{
	char B1;
	char B2[2],B3[3];
	char B3[4],B5[5];
}*/
int main(int argc, char *argv[])
{
	//보드
	char board[5][5];
	//for 변수
	int k;
	//좌표 변수
	int level,choice
	//보드 초기화
	for(int i =0;i<5;i++){
		for(int j=0;i<i+1;j++){
			board[i][j] ='○';
			}
		}
	//플레이어 2명
	char P1='■';
	//P2='●';
	
	//턴 변수
	bool turn = false;
	
	//플레이어 이름 입력
/*	if(turn == false) {
		printf("플레이어 P1 입력");
		scanf("%s",P1);		
		}
	else{
		printf("플레이어 P2 입력");
		scanf("%s",P2);		
		}*/
		int i=0;
		int j=i+1;
		//플레이어 턴
	for(k=0;k<9;k++){
		if(!turn){
			//플레이어가 선택
			printf("P1값 입력(level,choice) =");
			scanf("%d %d",level,choice);	
			}
		else{
			printf("P2값 입력(level,choice) =");
			scanf("%d %d",level,choice);
			}	
			//입력한 좌표에 값이 있다면
			if(board[level][choice] != '○'){
				printf("다시 입력하세요\n");
				k--;
				continue;
				}
			//지정한 좌표에 ■와 ● 넣기
			board[level][choice] = P1;
			printf("\n");
			
			//보드 그리기
			for(int n=0;n<5;n++){
				printf("■■■■■")
				printf("      ");
				printf("      "); printf("%c",board[level][choice]);printf("      "); 
				for(int a=0;a<)
				printf("%c",board[level][choice]);printf("      ");
				printf("    "); printf("%c",board[level][choice]);printf("    ");		
				printf("      "); printf("%c",board[level][choice]);printf("      ");		
				}
	}
}
